{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar classNames = require(\"classnames\");\n\nvar react_bootstrap_1 = require(\"react-bootstrap\");\n\nvar Badge_1 = require(\"../Badge\");\n\nvar Box_1 = require(\"../Box\");\n\nvar DirectChatToggleContactsButton_1 = require(\"./DirectChatToggleContactsButton\");\n\nvar DirectChatMessageList_1 = require(\"./DirectChatMessageList\");\n\nvar DirectChatMessage_1 = require(\"./DirectChatMessage\");\n\nvar DirectChatImage_1 = require(\"./DirectChatImage\");\n\nvar DirectChatText_1 = require(\"./DirectChatText\");\n\nvar DirectChatContactList_1 = require(\"./DirectChatContactList\");\n\nvar DirectChatContact_1 = require(\"./DirectChatContact\");\n\nvar DirectChatContactImage_1 = require(\"./DirectChatContactImage\");\n\nvar DirectChatContactInfo_1 = require(\"./DirectChatContactInfo\");\n\n;\n;\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  messageNumber: PropTypes.number,\n  style: PropTypes.oneOf(['primary', 'success', 'warning', 'danger']).isRequired,\n  onSubmitMessage: PropTypes.func,\n  title: PropTypes.node\n};\nvar childContextTypes = {\n  $adminlte_directchat: PropTypes.shape({\n    toggleContacts: PropTypes.func\n  })\n};\n\nvar DirectChat =\n/** @class */\nfunction (_super) {\n  __extends(DirectChat, _super);\n\n  function DirectChat(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      contactsOpen: false,\n      message: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_this);\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    return _this;\n  }\n\n  DirectChat.prototype.getChildContext = function () {\n    var _this = this;\n\n    return {\n      $adminlte_directchat: {\n        toggleContacts: function toggleContacts() {\n          _this.setState(function (state) {\n            return {\n              contactsOpen: !state.contactsOpen\n            };\n          });\n        }\n      }\n    };\n  };\n\n  DirectChat.prototype.handleChange = function (e) {\n    this.setState({\n      message: e.target.value\n    });\n  };\n\n  DirectChat.prototype.handleSubmit = function (e) {\n    e.preventDefault();\n\n    if (this.props.onSubmitMessage) {\n      this.props.onSubmitMessage(this.state.message);\n    }\n  };\n\n  DirectChat.prototype.renderBadge = function () {\n    var _a = this.props,\n        messageNumber = _a.messageNumber,\n        style = _a.style;\n\n    switch (style) {\n      case 'primary':\n        return React.createElement(Badge_1.default, {\n          background: \"light-blue\"\n        }, messageNumber);\n\n      case 'success':\n        return React.createElement(Badge_1.default, {\n          background: \"green\"\n        }, messageNumber);\n\n      case 'warning':\n        return React.createElement(Badge_1.default, {\n          background: \"yellow\"\n        }, messageNumber);\n\n      case 'danger':\n        return React.createElement(Badge_1.default, {\n          background: \"red\"\n        }, messageNumber);\n\n      default:\n        return React.createElement(Badge_1.default, null, messageNumber);\n    }\n  };\n\n  DirectChat.prototype.render = function () {\n    var classes = {\n      'direct-chat': true,\n      'direct-chat-contacts-open': this.state.contactsOpen\n    };\n    classes[\"direct-chat-\" + this.props.style] = true;\n    return React.createElement(Box_1.default, {\n      style: this.props.style,\n      className: classNames(this.props.className, classes)\n    }, React.createElement(Box_1.default.Header, {\n      border: true\n    }, React.createElement(Box_1.default.Title, null, this.props.title), React.createElement(Box_1.default.Tools, null, React.createElement(react_bootstrap_1.OverlayTrigger, {\n      overlay: React.createElement(react_bootstrap_1.Tooltip, {\n        id: \"direct-chat-messages-tooltip\"\n      }, this.props.messageNumber, \" New Messages\"),\n      placement: \"top\",\n      trigger: ['focus', 'hover']\n    }, React.createElement(\"span\", null, this.renderBadge())), React.createElement(Box_1.default.CollapsedToggleButton, null), React.createElement(DirectChatToggleContactsButton_1.default, null), React.createElement(Box_1.default.RemoveButton, null))), React.createElement(Box_1.default.Body, null, this.props.children), React.createElement(Box_1.default.Footer, null, React.createElement(react_bootstrap_1.Form, {\n      onSubmit: this.handleSubmit\n    }, React.createElement(react_bootstrap_1.InputGroup, null, React.createElement(react_bootstrap_1.FormControl, {\n      name: \"message\",\n      onChange: this.handleChange,\n      placeholder: \"Type Message...\",\n      type: \"text\",\n      value: this.state.message\n    }), React.createElement(react_bootstrap_1.InputGroup.Button, null, React.createElement(react_bootstrap_1.Button, {\n      type: \"submit\",\n      bsStyle: this.props.style\n    }, \"Send\"))))));\n  };\n\n  DirectChat.propTypes = propTypes;\n  DirectChat.childContextTypes = childContextTypes;\n  return DirectChat;\n}(React.Component);\n\nDirectChat.MessageList = DirectChatMessageList_1.default;\nDirectChat.Message = DirectChatMessage_1.default;\nDirectChat.Image = DirectChatImage_1.default;\nDirectChat.Text = DirectChatText_1.default;\nDirectChat.ContactList = DirectChatContactList_1.default;\nDirectChat.Contact = DirectChatContact_1.default;\nDirectChat.ContactImage = DirectChatContactImage_1.default;\nDirectChat.ContactInfo = DirectChatContactInfo_1.default;\nexports.default = DirectChat;","map":null,"metadata":{},"sourceType":"script"}