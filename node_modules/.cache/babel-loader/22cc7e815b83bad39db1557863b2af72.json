{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar classNames = require(\"classnames\");\n\nvar FontAwesome = require(\"react-fontawesome\");\n\nvar BoxHeader_1 = require(\"./BoxHeader\");\n\nvar BoxTitle_1 = require(\"./BoxTitle\");\n\nvar BoxTools_1 = require(\"./BoxTools\");\n\nvar BoxCollapsedToggleButton_1 = require(\"./BoxCollapsedToggleButton\");\n\nvar BoxRemoveButton_1 = require(\"./BoxRemoveButton\");\n\nvar BoxBody_1 = require(\"./BoxBody\");\n\nvar BoxFooter_1 = require(\"./BoxFooter\");\n\n;\n;\nvar propTypes = {\n  collapsed: PropTypes.bool,\n  style: PropTypes.oneOf(['default', 'primary', 'success', 'warning', 'danger', 'widget']),\n  solid: PropTypes.bool,\n  loading: PropTypes.bool,\n  spinner: PropTypes.oneOf(['circle-o-notch', 'cog', 'gear', 'refresh', 'spinner']),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onCollapseToggle: PropTypes.func\n};\nvar defaultProps = {\n  collapsed: false,\n  loading: false,\n  spinner: 'refresh',\n  solid: false\n};\nvar childContextTypes = {\n  $adminlte_box: PropTypes.shape({\n    collapsed: PropTypes.bool,\n    onCollapseToggle: PropTypes.func,\n    onRemove: PropTypes.func\n  })\n};\n\nvar Box =\n/** @class */\nfunction (_super) {\n  __extends(Box, _super);\n\n  function Box(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      collapsed: props.collapsed,\n      removed: false\n    };\n    return _this;\n  }\n\n  Box.prototype.getChildContext = function () {\n    var _this = this;\n\n    return {\n      $adminlte_box: {\n        collapsed: this.state.collapsed,\n        onCollapseToggle: function onCollapseToggle() {\n          _this.setState(function (state) {\n            return {\n              collapsed: !state.collapsed\n            };\n          });\n        },\n        onRemove: function onRemove() {\n          _this.setState({\n            removed: true\n          });\n        }\n      }\n    };\n  };\n\n  Box.prototype.render = function () {\n    if (this.state.removed) {\n      return null;\n    }\n\n    var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        style = _a.style,\n        solid = _a.solid,\n        loading = _a.loading,\n        spinner = _a.spinner;\n    var classes = {\n      box: true\n    };\n\n    if (this.state.collapsed) {\n      classes['collapsed-box'] = true;\n    }\n\n    if (style) {\n      classes[\"box-\" + style] = true;\n    }\n\n    if (solid) {\n      classes['box-solid'] = true;\n    }\n\n    var overlay = loading ? React.createElement(\"div\", {\n      className: \"overlay\"\n    }, React.createElement(FontAwesome, {\n      name: \"\" + spinner,\n      spin: true\n    })) : null;\n    return React.createElement(\"div\", {\n      className: classNames(className, classes)\n    }, children, overlay);\n  };\n\n  Box.propTypes = propTypes;\n  Box.defaultProps = defaultProps;\n  Box.childContextTypes = childContextTypes;\n  return Box;\n}(react_1.Component);\n\n;\nBox.Header = BoxHeader_1.default;\nBox.Title = BoxTitle_1.default;\nBox.Tools = BoxTools_1.default;\nBox.CollapsedToggleButton = BoxCollapsedToggleButton_1.default;\nBox.RemoveButton = BoxRemoveButton_1.default;\nBox.Body = BoxBody_1.default;\nBox.Footer = BoxFooter_1.default;\nexports.default = Box;","map":null,"metadata":{},"sourceType":"script"}