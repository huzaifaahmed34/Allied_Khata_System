{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar FontAwesome = require(\"react-fontawesome\");\n\nvar react_bootstrap_1 = require(\"react-bootstrap\");\n\n;\nvar propTypes = {\n  name: PropTypes.node,\n  size: PropTypes.string,\n  img: PropTypes.node,\n  icon: PropTypes.string,\n  onNameClick: PropTypes.func,\n  onDownloadClick: PropTypes.func\n};\n\nvar handleClick = function handleClick(cb) {\n  return function (event) {\n    if (cb) {\n      var target = event.target;\n      cb({\n        altKey: event.altKey,\n        bubbles: event.bubbles,\n        button: event.button,\n        buttons: event.buttons,\n        cancelable: event.cancelable,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        ctrlKey: event.ctrlKey,\n        currentTarget: target,\n        defaultPrevented: event.defaultPrevented,\n        eventPhase: event.eventPhase,\n        getModifierState: event.getModifierState,\n        isDefaultPrevented: event.isDefaultPrevented,\n        isPropagationStopped: event.isPropagationStopped,\n        isTrusted: event.isTrusted,\n        metaKey: event.metaKey,\n        nativeEvent: event.nativeEvent,\n        pageX: event.pageX,\n        pageY: event.pageY,\n        persist: event.persist,\n        preventDefault: event.preventDefault,\n        relatedTarget: event.relatedTarget,\n        screenX: event.screenX,\n        screenY: event.screenY,\n        shiftKey: event.shiftKey,\n        stopPropagation: event.stopPropagation,\n        target: event.target,\n        timeStamp: event.timeStamp,\n        type: event.type\n      });\n    }\n  };\n};\n\nvar MailboxAttachment = function MailboxAttachment(_a) {\n  var name = _a.name,\n      size = _a.size,\n      img = _a.img,\n      icon = _a.icon,\n      onNameClick = _a.onNameClick,\n      onDownloadClick = _a.onDownloadClick;\n  var span;\n  var preview;\n\n  if (img) {\n    span = \"mailbox-attachment-icon has-img\";\n    preview = img;\n  } else if (icon) {\n    span = \"mailbox-attachment-icon\";\n    preview = React.createElement(FontAwesome, {\n      name: icon\n    });\n  } else {\n    span = \"mailbox-attachment-icon\";\n    preview = React.createElement(FontAwesome, {\n      name: \"file-o\"\n    });\n  }\n\n  return React.createElement(\"li\", null, React.createElement(\"span\", {\n    className: span\n  }, preview), React.createElement(\"div\", {\n    className: \"mailbox-attachment-info\"\n  }, React.createElement(\"a\", {\n    onClick: onNameClick,\n    className: \"mailbox-attachment-name\"\n  }, name), React.createElement(\"span\", {\n    className: \"mailbox-attachment-size\"\n  }, size, React.createElement(react_bootstrap_1.Button, {\n    onClick: handleClick(onDownloadClick),\n    className: \"btn-xs pull-right\"\n  }, React.createElement(FontAwesome, {\n    name: \"cloud-download\"\n  })))));\n};\n\nMailboxAttachment.propTypes = propTypes;\nexports.default = MailboxAttachment;","map":null,"metadata":{},"sourceType":"script"}